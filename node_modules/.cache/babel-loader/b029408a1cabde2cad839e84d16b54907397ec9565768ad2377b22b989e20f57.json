{"ast":null,"code":"import _toConsumableArray from\"C:/Users/alammartins/Desktop/sec_words/ProjetosReact/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/alammartins/Desktop/sec_words/ProjetosReact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//CSS\nimport'./App.css';// React\nimport{useCallback,useEffect,useState}from\"react\";// Dados\nimport{wordsList}from\"./data/words\";//Componentes\nimport StartScreen from\"./Components/StartScreen\";import Game from\"./Components/Game\";import GameOver from\"./Components/GameOver\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var stages=[{id:1,name:\"start\"},{id:2,name:\"game\"},{id:3,name:\"end\"}];var guessesQty=3;function App(){var _useState=useState(stages[0].name),_useState2=_slicedToArray(_useState,2),gameStage=_useState2[0],setGameStage=_useState2[1];var _useState3=useState(wordsList),_useState4=_slicedToArray(_useState3,1),words=_useState4[0];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),pickedWord=_useState6[0],setPickedWord=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),pickedCategory=_useState8[0],setPickedCategory=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),letters=_useState10[0],setLetters=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),guessedLetters=_useState12[0],setGuessedLetters=_useState12[1];//Letras Certas\nvar _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),wrongLetters=_useState14[0],setWrongLetters=_useState14[1];//Letras Erradas\nvar _useState15=useState(guessesQty),_useState16=_slicedToArray(_useState15,2),guesses=_useState16[0],setGuesses=_useState16[1];//Tentativas\nvar _useState17=useState(50),_useState18=_slicedToArray(_useState17,2),score=_useState18[0],setScore=_useState18[1];var pickWordAndCategory=useCallback(function(){var categories=Object.keys(words);var category=categories[Math.floor(Math.random()*Object.keys(categories).length)];// console.log(category)\n//pick a random word\nvar word=words[category][Math.floor(Math.random()*words[category].length)];console.log(word);return{word:word,category:category};},[words]);// starts the secret word \nvar startGame=useCallback(function(){//Limpando todos os states\nclearLetterStates();// pick word and pick category\nvar _pickWordAndCategory=pickWordAndCategory(),word=_pickWordAndCategory.word,category=_pickWordAndCategory.category;// create an array of letters\nvar wordLetters=word.split(\"\");wordLetters=wordLetters.map(function(a){return a.toLowerCase();});console.log(word,category);console.log(wordLetters);// fill states\nsetPickedWord(word);setPickedCategory(category);setLetters(wordLetters);setGameStage(stages[1].name);},[pickWordAndCategory]);// process the letter input\nvar verifyLetter=function verifyLetter(letter){var normalizedLetter=letter.toLowerCase();//check if letter has already been utilized\nif(guessedLetters.includes(normalizedLetter)||wrongLetters.includes(normalizedLetter)){return;}// push guessed letter or remove a guess - Identificando se a letra está certa/errada\nif(letters.includes(normalizedLetter)){setGuessedLetters(function(actualGuessedLetters){return[].concat(_toConsumableArray(actualGuessedLetters),[normalizedLetter]);});}else{setWrongLetters(function(actualWrongLetters){return[].concat(_toConsumableArray(actualWrongLetters),[normalizedLetter]);});//Caso a pessoa erre, será diminuído o número de chanecs.o\nsetGuesses(function(actualGuesses){return actualGuesses-1;});}};// console.log(\"Certas: \"+guessedLetters)\n// console.log(\"Erradas: \"+wrongLetters)\nvar clearLetterStates=function clearLetterStates(){setGuessedLetters([]);setWrongLetters([]);};//Verifica a pontuação, se for 0 finaliza a partida resetando todos os states e setGameStage recebe state de novo jogo\nuseEffect(function(){if(guesses<=0){//reset all states\nclearLetterStates();setGameStage(stages[2].name);}},[guesses]);// verifica condição de vitória\nuseEffect(function(){var uniqueLetters=_toConsumableArray(new Set(letters));if(guessedLetters.length===uniqueLetters.length){//Adicionar Score\nsetScore(function(actualScore){return actualScore+=100;});//restart jogo\nstartGame();}},[guessedLetters,letters,startGame]);// reiniciar o jogo\nvar retry=function retry(){setScore(0);setGuesses(3);setGameStage(stages[0].name);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[gameStage=='start'&&/*#__PURE__*/_jsx(StartScreen,{startGame:startGame}),gameStage=='game'&&/*#__PURE__*/_jsx(Game,{verifyLetter:verifyLetter,pickedWord:pickedWord,pickedCategory:pickedCategory,letters:letters,guessedLetters:guessedLetters,wrongLetters:wrongLetters,guesses:guesses,score:score}),gameStage=='end'&&/*#__PURE__*/_jsx(GameOver,{retry:retry,score:score})]});}export default App;","map":{"version":3,"names":["useCallback","useEffect","useState","wordsList","StartScreen","Game","GameOver","jsx","_jsx","jsxs","_jsxs","stages","id","name","guessesQty","App","_useState","_useState2","_slicedToArray","gameStage","setGameStage","_useState3","_useState4","words","_useState5","_useState6","pickedWord","setPickedWord","_useState7","_useState8","pickedCategory","setPickedCategory","_useState9","_useState10","letters","setLetters","_useState11","_useState12","guessedLetters","setGuessedLetters","_useState13","_useState14","wrongLetters","setWrongLetters","_useState15","_useState16","guesses","setGuesses","_useState17","_useState18","score","setScore","pickWordAndCategory","categories","Object","keys","category","Math","floor","random","length","word","console","log","startGame","clearLetterStates","_pickWordAndCategory","wordLetters","split","map","a","toLowerCase","verifyLetter","letter","normalizedLetter","includes","actualGuessedLetters","concat","_toConsumableArray","actualWrongLetters","actualGuesses","uniqueLetters","Set","actualScore","retry","className","children"],"sources":["C:/Users/alammartins/Desktop/sec_words/ProjetosReact/src/App.js"],"sourcesContent":["//CSS\nimport './App.css';\n\n// React\nimport {useCallback, useEffect, useState} from \"react\";\n\n// Dados\nimport {wordsList} from \"./data/words\"\n\n//Componentes\nimport StartScreen from \"./Components/StartScreen\"\nimport Game from \"./Components/Game\"\nimport GameOver from \"./Components/GameOver\"\n\nconst stages = [\n  {id: 1, name: \"start\"},\n  {id: 2, name: \"game\"},\n  {id: 3, name: \"end\"},\n]\n\nconst guessesQty = 3\n\nfunction App() {\n\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n\n  const [pickedWord, setPickedWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n\n  const [guessedLetters, setGuessedLetters] = useState([]); //Letras Certas\n  const [wrongLetters, setWrongLetters] = useState([]); //Letras Erradas\n  const [guesses, setGuesses] = useState(guessesQty); //Tentativas\n  const [score, setScore] = useState(50);\n\n  const pickWordAndCategory = useCallback(() => {\n    const categories = Object.keys(words)\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)]\n\n    // console.log(category)\n\n    //pick a random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)];\n\n    console.log(word);\n\n    return {word,category}\n  },[words])\n\n  // starts the secret word \n  const startGame = useCallback(() => {\n    //Limpando todos os states\n    clearLetterStates()\n\n    // pick word and pick category\n    const {word, category} = pickWordAndCategory();\n\n    // create an array of letters\n    let wordLetters = word.split(\"\");\n\n    wordLetters = wordLetters.map((a) => a.toLowerCase())\n\n    console.log(word,category)\n    console.log(wordLetters)\n\n    // fill states\n    setPickedWord(word);\n    setPickedCategory(category);\n    setLetters(wordLetters);\n\n    setGameStage(stages[1].name);\n  },[pickWordAndCategory])\n\n  // process the letter input\n  const verifyLetter = (letter) => {\n      const normalizedLetter = letter.toLowerCase()\n\n      //check if letter has already been utilized\n    if(\n      guessedLetters.includes(normalizedLetter) ||  \n      wrongLetters.includes(normalizedLetter)\n      ){\n        return;\n      }\n\n      // push guessed letter or remove a guess - Identificando se a letra está certa/errada\n      if(letters.includes(normalizedLetter)){\n          setGuessedLetters((actualGuessedLetters) => [\n            ...actualGuessedLetters,\n            normalizedLetter\n          ])\n      }else{\n        setWrongLetters((actualWrongLetters) => [\n          ...actualWrongLetters,\n          normalizedLetter,\n        ]);\n\n        //Caso a pessoa erre, será diminuído o número de chanecs.o\n        setGuesses((actualGuesses) => actualGuesses - 1);\n\n      }\n    };\n\n    // console.log(\"Certas: \"+guessedLetters)\n    // console.log(\"Erradas: \"+wrongLetters)\n\n    const clearLetterStates = () => {\n      setGuessedLetters([]);\n      setWrongLetters([]);\n    }\n\n    //Verifica a pontuação, se for 0 finaliza a partida resetando todos os states e setGameStage recebe state de novo jogo\n    useEffect(() => {\n      if(guesses <= 0){\n        //reset all states\n        clearLetterStates()\n\n        setGameStage(stages[2].name);\n\n      }\n    },[guesses])\n\n  // verifica condição de vitória\n  useEffect(() => {\n    const uniqueLetters = [... new Set(letters)]\n\n    if(guessedLetters.length === uniqueLetters.length){\n      //Adicionar Score\n      setScore((actualScore) => actualScore += 100)\n\n      //restart jogo\n      startGame();\n\n    }\n\n  },[guessedLetters, letters, startGame])\n\n  // reiniciar o jogo\n  const retry = () => {\n    setScore(0);\n    setGuesses(3);\n    setGameStage(stages[0].name)\n  }\n\n  return (\n    <div className=\"App\">\n       \n        {gameStage == 'start' && <StartScreen startGame={startGame}/>}\n        \n        {gameStage == 'game' && (\n          <Game \n          verifyLetter   = {verifyLetter} \n          pickedWord     = {pickedWord}\n          pickedCategory = {pickedCategory}\n          letters        = {letters}\n          guessedLetters = {guessedLetters}\n          wrongLetters   = {wrongLetters}\n          guesses        = {guesses} \n          score          = {score}\n          />\n        )}\n\n        {gameStage == 'end' && <GameOver retry={retry} score={score}/>}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}