[{"C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\index.js":"1","C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\App.js":"2","C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\reportWebVitals.js":"3","C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\Components\\GameOver.js":"4","C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\Components\\Game.js":"5","C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\Components\\StartScreen.js":"6","C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\data\\words.js":"7","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\index.js":"8","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\reportWebVitals.js":"9","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\App.js":"10","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\Components\\StartScreen.js":"11","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\data\\words.js":"12","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\Components\\Game.js":"13","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\Components\\GameOver.js":"14"},{"size":535,"mtime":1695319567830,"results":"15","hashOfConfig":"16"},{"size":4351,"mtime":1695320387302,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1695319568079,"results":"18","hashOfConfig":"16"},{"size":291,"mtime":1695298598000,"results":"19","hashOfConfig":"16"},{"size":2221,"mtime":1695298774000,"results":"20","hashOfConfig":"16"},{"size":323,"mtime":1695236910000,"results":"21","hashOfConfig":"16"},{"size":420,"mtime":1695209442000,"results":"22","hashOfConfig":"16"},{"size":535,"mtime":1695319567830,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1695319568079,"results":"25","hashOfConfig":"24"},{"size":4351,"mtime":1695320387302,"results":"26","hashOfConfig":"24"},{"size":323,"mtime":1695236910000,"results":"27","hashOfConfig":"24"},{"size":420,"mtime":1695209442000,"results":"28","hashOfConfig":"24"},{"size":2221,"mtime":1695298774000,"results":"29","hashOfConfig":"24"},{"size":291,"mtime":1695298598000,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k8j6tu",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ldkw92",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\index.js",[],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\App.js",["77","78","79","80"],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\reportWebVitals.js",[],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\Components\\GameOver.js",["81"],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\Components\\Game.js",["82"],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\Components\\StartScreen.js",["83"],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\sec-words\\src\\data\\words.js",[],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\index.js",[],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\reportWebVitals.js",[],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\App.js",["84","85","86","87"],[],"//CSS\nimport './App.css';\n\n// React\nimport {useCallback, useEffect, useState} from \"react\";\n\n// Dados\nimport {wordsList} from \"./data/words\"\n\n//Componentes\nimport StartScreen from \"./Components/StartScreen\"\nimport Game from \"./Components/Game\"\nimport GameOver from \"./Components/GameOver\"\n\nconst stages = [\n  {id: 1, name: \"start\"},\n  {id: 2, name: \"game\"},\n  {id: 3, name: \"end\"},\n]\n\nconst guessesQty = 3\n\nfunction App() {\n\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n\n  const [pickedWord, setPickedWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n\n  const [guessedLetters, setGuessedLetters] = useState([]); //Letras Certas\n  const [wrongLetters, setWrongLetters] = useState([]); //Letras Erradas\n  const [guesses, setGuesses] = useState(guessesQty); //Tentativas\n  const [score, setScore] = useState(50);\n\n  const pickWordAndCategory = useCallback(() => {\n    const categories = Object.keys(words)\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)]\n\n    // console.log(category)\n\n    //pick a random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)];\n\n    console.log(word);\n\n    return {word,category}\n  },[words])\n\n  // starts the secret word \n  const startGame = useCallback(() => {\n    //Limpando todos os states\n    clearLetterStates()\n\n    // pick word and pick category\n    const {word, category} = pickWordAndCategory();\n\n    // create an array of letters\n    let wordLetters = word.split(\"\");\n\n    wordLetters = wordLetters.map((a) => a.toLowerCase())\n\n    console.log(word,category)\n    console.log(wordLetters)\n\n    // fill states\n    setPickedWord(word);\n    setPickedCategory(category);\n    setLetters(wordLetters);\n\n    setGameStage(stages[1].name);\n  },[pickWordAndCategory])\n\n  // process the letter input\n  const verifyLetter = (letter) => {\n      const normalizedLetter = letter.toLowerCase()\n\n      //check if letter has already been utilized\n    if(\n      guessedLetters.includes(normalizedLetter) ||  \n      wrongLetters.includes(normalizedLetter)\n      ){\n        return;\n      }\n\n      // push guessed letter or remove a guess - Identificando se a letra está certa/errada\n      if(letters.includes(normalizedLetter)){\n          setGuessedLetters((actualGuessedLetters) => [\n            ...actualGuessedLetters,\n            normalizedLetter\n          ])\n      }else{\n        setWrongLetters((actualWrongLetters) => [\n          ...actualWrongLetters,\n          normalizedLetter,\n        ]);\n\n        //Caso a pessoa erre, será diminuído o número de chanecs.o\n        setGuesses((actualGuesses) => actualGuesses - 1);\n\n      }\n    };\n\n    // console.log(\"Certas: \"+guessedLetters)\n    // console.log(\"Erradas: \"+wrongLetters)\n\n    const clearLetterStates = () => {\n      setGuessedLetters([]);\n      setWrongLetters([]);\n    }\n\n    //Verifica a pontuação, se for 0 finaliza a partida resetando todos os states e setGameStage recebe state de novo jogo\n    useEffect(() => {\n      if(guesses <= 0){\n        //reset all states\n        clearLetterStates()\n\n        setGameStage(stages[2].name);\n\n      }\n    },[guesses])\n\n  // verifica condição de vitória\n  useEffect(() => {\n    const uniqueLetters = [... new Set(letters)]\n\n    if(guessedLetters.length === uniqueLetters.length){\n      //Adicionar Score\n      setScore((actualScore) => actualScore += 100)\n\n      //restart jogo\n      startGame();\n\n    }\n\n  },[guessedLetters, letters, startGame])\n\n  // reiniciar o jogo\n  const retry = () => {\n    setScore(0);\n    setGuesses(3);\n    setGameStage(stages[0].name)\n  }\n\n  return (\n    <div className=\"App\">\n       \n        {gameStage == 'start' && <StartScreen startGame={startGame}/>}\n        \n        {gameStage == 'game' && (\n          <Game \n          verifyLetter   = {verifyLetter} \n          pickedWord     = {pickedWord}\n          pickedCategory = {pickedCategory}\n          letters        = {letters}\n          guessedLetters = {guessedLetters}\n          wrongLetters   = {wrongLetters}\n          guesses        = {guesses} \n          score          = {score}\n          />\n        )}\n\n        {gameStage == 'end' && <GameOver retry={retry} score={score}/>}\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\Components\\StartScreen.js",["88"],[],"\r\nimport css from './StartScreen.css';\r\n\r\nconst StartScreen = ({startGame}) => {\r\n  return (\r\n    <div className=\"start\">\r\n      <h1>Secret Word</h1>\r\n      <p>Clieque no botão abaixo para começar a jogar</p>\r\n      <button onClick={startGame}>Começar o jogo</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StartScreen\r\n ","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\data\\words.js",[],[],"C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\Components\\Game.js",["89"],[],"import css from './Game.css'\r\nimport {useState, useRef} from \"react\";\r\n\r\nconst Game = ({verifyLetter, pickedWord, pickedCategory, letters, guessedLetters, wrongLetters, guesses, score}) => {\r\n\r\n\r\n    const [letter, setLetter] = useState(\"\");\r\n    const letterInputRef = useRef(null)\r\n\r\n    // console.log('1'+verifyLetter, '- 2 '+pickedWord, '- 3 '+pickedCategory,'- 4 '+ letters, '- 5 '+guessedLetters, '- 6 '+wrongLetters, '- 7 '+guesses, '- 8 '+score)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        verifyLetter(letter)\r\n        setLetter(\"\")\r\n        letterInputRef.current.focus()\r\n    }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n        <p className=\"points\">\r\n            <span>Pontuação: {score}</span>\r\n        </p>\r\n      {/* <button onClick={verifyLetter}>Finalizar Jogo</button> */}\r\n        <h1>Adivinhe a palavra:</h1>\r\n        <h3 classname=\"tip\">\r\n            Dica sobre a palavra:  <span>{pickedCategory}</span>\r\n        </h3>\r\n        <p>Você ainda tem {guesses} tentativa(s).</p>\r\n        <div className=\"wordContainer\">\r\n            {letters.map((letter,i) => {\r\n                return(guessedLetters.includes(letter) ? (\r\n                    <span key={i} className=\"letter\">\r\n                        {letter}\r\n                    </span>\r\n                ) : (\r\n                    <span key={i} className=\"blankSquare\"></span>\r\n                ))\r\n            })}\r\n        </div>\r\n        <div className=\"letterContainer\">\r\n            <p>Tente adivinhar uma letra da palavra:</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                type=\"text\" \r\n                name=\"letter\" \r\n                maxLength=\"1\"  \r\n                onChange={(e) => setLetter(e.target.value)}\r\n                required\r\n                value={letter}\r\n                ref={letterInputRef}\r\n                />\r\n                <button>Jogar!</button>\r\n            </form>\r\n        </div>\r\n        <div className=\"wrongLettersContainer\">\r\n            <p>Letras já utilizadas:</p>\r\n            {wrongLetters.map((letter,i) => (\r\n                <span key={i}>{letter},</span>\r\n            ))}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","C:\\Users\\alammartins\\Desktop\\sec_words\\ProjetosReact\\src\\Components\\GameOver.js",["90"],[],"import css from './GameOver.css'\r\n\r\nconst GameOver = ({retry,score}) => {\r\n  return (\r\n    <div>\r\n      <h1>Fim de Jogo!</h1>\r\n      <h2>A sua pontuação foi: <span>{score}</span></h2>\r\n      <button onClick={retry}>Resetar o Jogo</button>\r\n    </div>\r\n  )\r\n\r\n  }\r\nexport default GameOver\r\n",{"ruleId":"91","severity":1,"message":"92","line":126,"column":31,"nodeType":"93","messageId":"94","endLine":126,"endColumn":32,"fix":"95"},{"ruleId":"96","severity":1,"message":"97","line":149,"column":20,"nodeType":"98","messageId":"99","endLine":149,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":151,"column":20,"nodeType":"98","messageId":"99","endLine":151,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":164,"column":20,"nodeType":"98","messageId":"99","endLine":164,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":11},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":11},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":126,"column":31,"nodeType":"93","messageId":"94","endLine":126,"endColumn":32,"fix":"104"},{"ruleId":"96","severity":1,"message":"97","line":149,"column":20,"nodeType":"98","messageId":"99","endLine":149,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":151,"column":20,"nodeType":"98","messageId":"99","endLine":151,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":164,"column":20,"nodeType":"98","messageId":"99","endLine":164,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":11},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":11},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":11},"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"105","text":"106"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'css' is defined but never used.","Identifier","unusedVar",{"range":"107","text":"106"},[3342,3343],"",[3342,3343]]